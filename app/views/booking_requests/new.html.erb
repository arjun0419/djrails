<!DOCTYPE html>
<html>
  <head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
       <style>
      html, body, #map-canvas {
        height: 650px;
        width: auto;
        margin: 0px;
        padding: 0px
      }
      .controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        padding: 0 11px 0 13px;
        width: 30vw;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        text-overflow: ellipsis;
      }

 

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
}

    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places"></script>

    <script>

			function initialize() {
		  var mapOptions = {
		    center: new google.maps.LatLng(9.9700, 76.2800),
		    zoom: 6
		  };
		  var map = new google.maps.Map(document.getElementById('map-canvas'),
		    mapOptions);

		  var input = /** @type {HTMLInputElement} */(
		      document.getElementById('pac-input'));

		  var types = document.getElementById('type-selector');
		  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
		  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

		  var autocomplete = new google.maps.places.Autocomplete(input);
		  autocomplete.bindTo('bounds', map);

		  var infowindow = new google.maps.InfoWindow();
		  var marker = new google.maps.Marker({
		    map: map,
		    anchorPoint: new google.maps.Point(0, -29)
		  });

		  google.maps.event.addListener(autocomplete, 'place_changed', function() {
		    infowindow.close();
		    marker.setVisible(false);
		    var place = autocomplete.getPlace();
		    if (!place.geometry) {
		      return;
		    }

		    // If the place has a geometry, then present it on a map.
		    if (place.geometry.viewport) {
		      map.fitBounds(place.geometry.viewport);
		    } else {
		      map.setCenter(place.geometry.location);
		      map.setZoom(17);  // Why 17? Because it looks good.
		    }
		    marker.setIcon(/** @type {google.maps.Icon} */({
		      url: place.icon,
		      size: new google.maps.Size(71, 71),
		      origin: new google.maps.Point(0, 0),
		      anchor: new google.maps.Point(17, 34),
		      scaledSize: new google.maps.Size(35, 35)
		    }));
		    marker.setPosition(place.geometry.location);
		    marker.setVisible(true);

		    var address = '';
		    if (place.address_components) {
		      address = [
		        (place.address_components[0] && place.address_components[0].short_name || ''),
		        (place.address_components[1] && place.address_components[1].short_name || ''),
		        (place.address_components[2] && place.address_components[2].short_name || '')
		      ].join(' ');
		    }

		    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
		    infowindow.open(map, marker);
		  });

		  // Sets a listener on a radio button to change the filter type on Places
		  // Autocomplete.
		  function setupClickListener(id, types) {
		    var radioButton = document.getElementById(id);
		    google.maps.event.addDomListener(radioButton, 'click', function() {
		      autocomplete.setTypes(types);
		    });
		  }
		}
		google.maps.event.addDomListener(window, 'load', initialize);
    </script>
  </head>
  <body>
   
<div class="container">
	<br>
	<br>
	<br>
		<div class="col-md-12 row fillform ">
			<h3> Great! Please fill in the following form and we will get started on your booking request.</h3>
	</div>
	<div class = "row col-md-5 ">
		<%= simple_form_for(@bookingrequest, html: {:class => 'form-horizontal'}) do |form| %>
		<h4 class = "formsection"> Your Contact Information</h4>
		<%= form.input :first_name, label:false, input_html: {:class => "form-control", placeholder:"What's your First Name?"}%>
		<%= form.input :last_name, label:false, input_html: {:class => "form-control", placeholder:"What's your Last Name"}%>
		<%= form.input :email, label:false, input_html: {:class => "form-control", placeholder:"What's your email ID?"}%>
		<%= form.input :phone, label:false, input_html: {:class => "form-control", placeholder:"What's your phone number? (Optional)"}%>
		<%= form.input :passengers, label:false, input_html: {:class => "form-control", placeholder:"Please enter the number of passengers"}%>

		<br>
		<h4 class = "formsection"> Pick-Up Information <h4>
		<%= form.input :pickup_date, label:false, input_html: {:class => "form-control"}%>
		<br>
		<br>
		<br>
		<%= form.input :pickup_location, label:false, input_html: {:class => "form-control", placeholder:"Where can we pick you up from?"}%>
		<br>
		<h4 class = "formsection"> Drop-Off Information <h4>
		<%= form.input :drop_date, label:false, input_html: {:class => "form-control"}%>
		<br>
		<br>
		<br>
		<%= form.input :drop_location, label:false, input_html: {:class => "form-control", placeholder:"Where would you like us to take you?"}%>
		
		<br>
		<%= form.button :submit, 'Submit Booking Request', :class=> "btn btn-primary" %>
		<% end %>
	</div>

	<div class = "col-md-7">
		<br>
		<br>
 		<input id="pac-input" class="controls" type="text"
        placeholder="Look up your address here if you need to">
    
    	<div id="map-canvas">
    	</div>
 	</div>
</div>